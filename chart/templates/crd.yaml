# Code generated by make generate-manifests. DO NOT EDIT.
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: imageimports.shipwright.io
spec:
  group: shipwright.io
  names:
    kind: ImageImport
    listKind: ImageImportList
    plural: imageimports
    shortNames:
    - ii
    singular: imageimport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Target Image
      type: string
    - jsonPath: .spec.insecure
      name: Insecure
      type: boolean
    - jsonPath: .spec.mirror
      name: Mirror
      type: boolean
    - jsonPath: .status.hashReference.importedAt
      name: Imported At
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ImageImport represents a request, made by the user, to import
          a Image from a remote repository and into an Image object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageImportSpec represents the body of the request to import
              a given container image tag from a remote location. Values not set in
              here are read from the Image, e.g.  if no "mirror" is set here but it
              is set in the image we use it.
            properties:
              image:
                description: Image points the name of the target image for an image
                  import.
                type: string
              insecure:
                description: Insecure, when set, overrides the default Insecure property
                  set in the target image.
                type: boolean
              mirror:
                description: Mirror, when set, overrides the default Mirror property
                  set in the target image.
                type: boolean
              source:
                description: Source is a reference from where to import the image,
                  this property overrides the default Source defined in the Image
                  object.
                type: string
            required:
            - image
            - source
            type: object
          status:
            description: ImageImportStatus holds the current status for an image tag
              import attempt.
            properties:
              conditions:
                description: Conditions holds a list of conditions that represent
                  the current state of the resource.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hashReference:
                description: HashReference is populated with the actual image reference
                  once the import succeeds.
                properties:
                  imageReference:
                    description: ImageReference holds the image reference (by hash)
                      obtained during the import. This fields holds the actual result
                      of the import process.
                    type: string
                  importedAt:
                    description: ImportedAt holds the date and time the import has
                      finished.
                    format: date-time
                    type: string
                  source:
                    description: Source indicates from where the image was imported.
                    type: string
                required:
                - importedAt
                - source
                type: object
              importAttempts:
                description: ImportAttempts holds a list of all import attempts executed,
                  failures and successes.
                items:
                  description: ImportAttempt holds data about an import cycle. Keeps
                    track if it was successful, when it happened and if not successful
                    what was the error reported (reason).
                  properties:
                    reason:
                      description: Reason holds the error if the attempt failed. Empty
                        if the attempt succeeded.
                      type: string
                    succeed:
                      description: Succeed indicates if the attempt was sucessful
                        or not.
                      type: boolean
                    when:
                      description: When holds the date and time of the import attempt
                        failure or success.
                      format: date-time
                      type: string
                  required:
                  - succeed
                  - when
                  type: object
                type: array
            required:
            - conditions
            - importAttempts
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: images.shipwright.io
spec:
  group: shipwright.io
  names:
    kind: Image
    listKind: ImageList
    plural: images
    shortNames:
    - img
    singular: image
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mirror
      name: Mirror
      type: boolean
    - jsonPath: .spec.insecure
      name: Insecure
      type: boolean
    - jsonPath: .spec.source
      name: Source
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Image is a map between an internal kubernetes image tag and multiple
          remote hosted images.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageSpec represents the user intention with regards to importing
              remote images.
            properties:
              insecure:
                description: Insecure indicates that invalid certificates should be
                  ignored during the image import operation.
                type: boolean
              mirror:
                description: Mirror indicates if a mirror operation should take place
                  when importing this image.
                type: boolean
              source:
                description: Source indicates the registry from where this image is
                  imported by default.
                type: string
            required:
            - insecure
            - mirror
            - source
            type: object
          status:
            description: ImageStatus is the current status for an Image.
            properties:
              hashReferences:
                description: HashReferences holds a list of all images "versions"
                  already imported.
                items:
                  description: HashReference is an reference to an imported Image
                    (by its sha).
                  properties:
                    imageReference:
                      description: ImageReference holds the image reference (by hash)
                        obtained during the import. This fields holds the actual result
                        of the import process.
                      type: string
                    importedAt:
                      description: ImportedAt holds the date and time the import has
                        finished.
                      format: date-time
                      type: string
                    source:
                      description: Source indicates from where the image was imported.
                      type: string
                  required:
                  - importedAt
                  - source
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
