---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imageimports.shipwright.io
spec:
  group: shipwright.io
  names:
    kind: ImageImport
    listKind: ImageImportList
    plural: imageimports
    singular: imageimport
    shortNames:
    - ii
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    served: true
    storage: true
    additionalPrinterColumns:
    - description: Insecure
      jsonPath: .spec.insecure
      name: insecure
      type: boolean
    - description: Mirroring
      jsonPath: .spec.mirror
      name: mirror
      type: boolean
    - description: Target Image
      jsonPath: .spec.image
      name: image
      type: string
    - description: Imported At
      jsonPath: .status.hashReference.importedAt
      name: importedAt
      type: string
    - description: Image Reference
      jsonPath: .status.hashReference.imageReference
      name: imageReference 
      type: string
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              image:
                type: string
                description: An ImageImport object is a request to import an Image object.
                  The Image object name is specified here and lives in the same namespace
                  as the ImageImport object.
              source:
                type: string
                description: This property allows users to override the source registry for
                  the import. Users can specify here a different image to be imported with
                  its fully address (e.g. docker.io/library/centos:latest).
              mirror:
                type: boolean
                description: Indicates if the image should be mirrored or not. This property
                  overrides the same property in the Image object thus allowing a temporary
                  change in behavior.
              insecure:
                type: boolean
                description: Indicates if the operator can skip TLS verification when
                  importing the remote image (i.e. allows insecure source registry).
          status:
            type: object
            properties:
              conditions:
                type: array
                nullable: true
                items:
                  type: object
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be
                        when the underlying condition changed.  If that is not known,
                        then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if
                        .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False,
                        Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict
                        is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
              importAttempts:
                type: array
                nullable: true
                items:
                  type: object
                  properties:
                    when:
                      type: string
                      nullable: true
                      description: When the import attempt happen, date and time.
                    succeed:
                      type: boolean
                      description: If the import suceeded this is true, it is false otherwise.
                    reason:
                      type: string
                      description: The reason for the failure. Most likely will contain the
                        error string returned during the import attempt.
              hashReference:
                type: object
                properties:
                  source:
                    type: string
                    description: Holds the source of the import (from where the image was
                      imported).
                  importedAt:
                    type: string
                    description: Date and time of the import.
                  imageReference:
                    type: string
                    description: The actual image reference, pointing to the current SHA
                      of the manifest found during the import.
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: images.shipwright.io
spec:
  group: shipwright.io 
  names:
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
    shortNames:
    - img
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    served: true
    storage: true
    additionalPrinterColumns:
    - description: Insecure
      jsonPath: .spec.insecure
      name: insecure
      type: boolean
    - description: Mirroring
      jsonPath: .spec.mirror
      name: mirror
      type: boolean
    - description: Current image source
      jsonPath: .spec.source
      name: source
      type: string
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              source:
                type: string
                description: The image path from where the import will fetch the image, e.g.
                  docker.io/library/centos:latest
              mirror:
                type: boolean
                description: True if the image should be mirrored to an external registry.
              insecure:
                type: boolean
                description: True if the operator can skip TLS verification when reading the
                  remote image.
          status:
            type: object
            properties:
              hashReferences:
                type: array
                nullable: true
                items:
                  type: object
                  properties:
                    source:
                      type: string
                      description: Holds the source of the import (from where the image was
                        imported).
                    importedAt:
                      type: string
                      description: Date and time of the import.
                    imageReference:
                      type: string
                      description: The actual image reference, pointing to the current SHA
                        of the manifest found during the import.
